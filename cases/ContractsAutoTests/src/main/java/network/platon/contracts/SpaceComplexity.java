package network.platon.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.GasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 0.7.5.0.
 */
public class SpaceComplexity extends Contract {
    private static final String BINARY = "60806040526040518060400160405280600681526020017f71637869616f00000000000000000000000000000000000000000000000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b50610107565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a357805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d05782518255916020019190600101906100b5565b5b5090506100de91906100e2565b5090565b61010491905b808211156101005760008160009055506001016100e8565b5090565b90565b61091d806101166000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b57806365becf9b146100be575b600080fd5b6100436100ec565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610083578082015181840152602081019050610068565b50505050905090810190601f1680156100b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100ea600480360360208110156100d457600080fd5b810190808035906020019092919050505061018e565b005b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101845780601f1061015957610100808354040283529160200191610184565b820191906000526020600020905b81548152906001019060200180831161016757829003601f168201915b5050505050905090565b60008090505b818110156101d6576000600283816101a857fe5b0614156101be576101b960006101da565b6101c9565b6101c86000610561565b5b8080600101915050610194565b5050565b7f510000000000000000000000000000000000000000000000000000000000000081600081546001816001161561010002031660029004811061021957fe5b8154600116156102385790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f43000000000000000000000000000000000000000000000000000000000000008160018154600181600116156101000203166002900481106102af57fe5b8154600116156102ce5790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f580000000000000000000000000000000000000000000000000000000000000081600281546001816001161561010002031660029004811061034557fe5b8154600116156103645790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f49000000000000000000000000000000000000000000000000000000000000008160038154600181600116156101000203166002900481106103db57fe5b8154600116156103fa5790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f410000000000000000000000000000000000000000000000000000000000000081600481546001816001161561010002031660029004811061047157fe5b8154600116156104905790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f4f0000000000000000000000000000000000000000000000000000000000000081600581546001816001161561010002031660029004811061050757fe5b8154600116156105265790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f01000000000000000000000000000000000000000000000000000000000000008404021790555050565b7f71000000000000000000000000000000000000000000000000000000000000008160008154600181600116156101000203166002900481106105a057fe5b8154600116156105bf5790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f630000000000000000000000000000000000000000000000000000000000000081600181546001816001161561010002031660029004811061063657fe5b8154600116156106555790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f78000000000000000000000000000000000000000000000000000000000000008160028154600181600116156101000203166002900481106106cc57fe5b8154600116156106eb5790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f690000000000000000000000000000000000000000000000000000000000000081600381546001816001161561010002031660029004811061076257fe5b8154600116156107815790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f61000000000000000000000000000000000000000000000000000000000000008160048154600181600116156101000203166002900481106107f857fe5b8154600116156108175790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f6f0000000000000000000000000000000000000000000000000000000000000081600581546001816001161561010002031660029004811061088e57fe5b8154600116156108ad5790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055505056fea265627a7a723158208f84149234ce3c4984931c5dc5a903ee966759463516ba259115b0829a220e4a64736f6c634300050d0032";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_TESTSTORAGE = "testStorage";

    @Deprecated
    protected SpaceComplexity(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected SpaceComplexity(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected SpaceComplexity(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected SpaceComplexity(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<String> name() {
        final Function function = new Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> testStorage(BigInteger n) {
        final Function function = new Function(
                FUNC_TESTSTORAGE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(n)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<SpaceComplexity> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return deployRemoteCall(SpaceComplexity.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SpaceComplexity> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SpaceComplexity.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<SpaceComplexity> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return deployRemoteCall(SpaceComplexity.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SpaceComplexity> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SpaceComplexity.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static SpaceComplexity load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SpaceComplexity(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static SpaceComplexity load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SpaceComplexity(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static SpaceComplexity load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return new SpaceComplexity(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static SpaceComplexity load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return new SpaceComplexity(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
