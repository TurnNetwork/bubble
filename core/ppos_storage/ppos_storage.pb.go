// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ppos_storage.proto

/*
Package ppos_storage is a generated protocol buffer package.

It is generated from these files:
	ppos_storage.proto

It has these top-level messages:
	CandidateInfo
	Refund
	RefundArr
	CandidateTemp
	Field
	TicketDependency
	TicketTemp
	PB_PPosTemp
	SortTemp
*/
package ppos_storage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CandidateInfo struct {
	Deposit     string `protobuf:"bytes,1,opt,name=Deposit" json:"Deposit,omitempty"`
	BlockNumber string `protobuf:"bytes,2,opt,name=BlockNumber" json:"BlockNumber,omitempty"`
	TxIndex     uint32 `protobuf:"varint,3,opt,name=TxIndex" json:"TxIndex,omitempty"`
	CandidateId string `protobuf:"bytes,4,opt,name=CandidateId" json:"CandidateId,omitempty"`
	Host        string `protobuf:"bytes,5,opt,name=Host" json:"Host,omitempty"`
	Port        string `protobuf:"bytes,6,opt,name=Port" json:"Port,omitempty"`
	Owner       string `protobuf:"bytes,7,opt,name=Owner" json:"Owner,omitempty"`
	//  string    From          = 8;
	Extra  string `protobuf:"bytes,8,opt,name=Extra" json:"Extra,omitempty"`
	Fee    uint32 `protobuf:"varint,9,opt,name=Fee" json:"Fee,omitempty"`
	TxHash string `protobuf:"bytes,10,opt,name=TxHash" json:"TxHash,omitempty"`
	TOwner string `protobuf:"bytes,11,opt,name=TOwner" json:"TOwner,omitempty"`
}

func (m *CandidateInfo) Reset()                    { *m = CandidateInfo{} }
func (m *CandidateInfo) String() string            { return proto.CompactTextString(m) }
func (*CandidateInfo) ProtoMessage()               {}
func (*CandidateInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CandidateInfo) GetDeposit() string {
	if m != nil {
		return m.Deposit
	}
	return ""
}

func (m *CandidateInfo) GetBlockNumber() string {
	if m != nil {
		return m.BlockNumber
	}
	return ""
}

func (m *CandidateInfo) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *CandidateInfo) GetCandidateId() string {
	if m != nil {
		return m.CandidateId
	}
	return ""
}

func (m *CandidateInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *CandidateInfo) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *CandidateInfo) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *CandidateInfo) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *CandidateInfo) GetFee() uint32 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *CandidateInfo) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *CandidateInfo) GetTOwner() string {
	if m != nil {
		return m.TOwner
	}
	return ""
}

type Refund struct {
	Deposit     string `protobuf:"bytes,1,opt,name=Deposit" json:"Deposit,omitempty"`
	BlockNumber string `protobuf:"bytes,2,opt,name=BlockNumber" json:"BlockNumber,omitempty"`
	Owner       string `protobuf:"bytes,3,opt,name=Owner" json:"Owner,omitempty"`
}

func (m *Refund) Reset()                    { *m = Refund{} }
func (m *Refund) String() string            { return proto.CompactTextString(m) }
func (*Refund) ProtoMessage()               {}
func (*Refund) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Refund) GetDeposit() string {
	if m != nil {
		return m.Deposit
	}
	return ""
}

func (m *Refund) GetBlockNumber() string {
	if m != nil {
		return m.BlockNumber
	}
	return ""
}

func (m *Refund) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type RefundArr struct {
	Defeats []*Refund `protobuf:"bytes,1,rep,name=Defeats" json:"Defeats,omitempty"`
}

func (m *RefundArr) Reset()                    { *m = RefundArr{} }
func (m *RefundArr) String() string            { return proto.CompactTextString(m) }
func (*RefundArr) ProtoMessage()               {}
func (*RefundArr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RefundArr) GetDefeats() []*Refund {
	if m != nil {
		return m.Defeats
	}
	return nil
}

type CandidateTemp struct {
	//  three round witness
	Pres  []*CandidateInfo `protobuf:"bytes,1,rep,name=pres" json:"pres,omitempty"`
	Currs []*CandidateInfo `protobuf:"bytes,2,rep,name=currs" json:"currs,omitempty"`
	Nexts []*CandidateInfo `protobuf:"bytes,3,rep,name=nexts" json:"nexts,omitempty"`
	// can pool
	Imms []*CandidateInfo `protobuf:"bytes,4,rep,name=imms" json:"imms,omitempty"`
	Res  []*CandidateInfo `protobuf:"bytes,5,rep,name=res" json:"res,omitempty"`
	// refunds
	Refunds map[string]*RefundArr `protobuf:"bytes,6,rep,name=refunds" json:"refunds,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CandidateTemp) Reset()                    { *m = CandidateTemp{} }
func (m *CandidateTemp) String() string            { return proto.CompactTextString(m) }
func (*CandidateTemp) ProtoMessage()               {}
func (*CandidateTemp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CandidateTemp) GetPres() []*CandidateInfo {
	if m != nil {
		return m.Pres
	}
	return nil
}

func (m *CandidateTemp) GetCurrs() []*CandidateInfo {
	if m != nil {
		return m.Currs
	}
	return nil
}

func (m *CandidateTemp) GetNexts() []*CandidateInfo {
	if m != nil {
		return m.Nexts
	}
	return nil
}

func (m *CandidateTemp) GetImms() []*CandidateInfo {
	if m != nil {
		return m.Imms
	}
	return nil
}

func (m *CandidateTemp) GetRes() []*CandidateInfo {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *CandidateTemp) GetRefunds() map[string]*RefundArr {
	if m != nil {
		return m.Refunds
	}
	return nil
}

type Field struct {
	TxHash    string `protobuf:"bytes,1,opt,name=TxHash" json:"TxHash,omitempty"`
	Remaining uint32 `protobuf:"varint,2,opt,name=Remaining" json:"Remaining,omitempty"`
	Price     string `protobuf:"bytes,3,opt,name=Price" json:"Price,omitempty"`
}

func (m *Field) Reset()                    { *m = Field{} }
func (m *Field) String() string            { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()               {}
func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Field) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *Field) GetRemaining() uint32 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *Field) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

type TicketDependency struct {
	//    uint64  Age = 1;
	Num uint32 `protobuf:"varint,2,opt,name=Num" json:"Num,omitempty"`
	//    repeated bytes  Tids = 3;
	Tinfo []*Field `protobuf:"bytes,3,rep,name=Tinfo" json:"Tinfo,omitempty"`
}

func (m *TicketDependency) Reset()                    { *m = TicketDependency{} }
func (m *TicketDependency) String() string            { return proto.CompactTextString(m) }
func (*TicketDependency) ProtoMessage()               {}
func (*TicketDependency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TicketDependency) GetNum() uint32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *TicketDependency) GetTinfo() []*Field {
	if m != nil {
		return m.Tinfo
	}
	return nil
}

type TicketTemp struct {
	Sq int32 `protobuf:"varint,1,opt,name=Sq" json:"Sq,omitempty"`
	//    map<string, TicketInfo> Infos = 2;
	//    map<string, TxHashArr> Ets  = 3;
	Dependencys map[string]*TicketDependency `protobuf:"bytes,4,rep,name=Dependencys" json:"Dependencys,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TicketTemp) Reset()                    { *m = TicketTemp{} }
func (m *TicketTemp) String() string            { return proto.CompactTextString(m) }
func (*TicketTemp) ProtoMessage()               {}
func (*TicketTemp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *TicketTemp) GetSq() int32 {
	if m != nil {
		return m.Sq
	}
	return 0
}

func (m *TicketTemp) GetDependencys() map[string]*TicketDependency {
	if m != nil {
		return m.Dependencys
	}
	return nil
}

type PB_PPosTemp struct {
	CanTmp      *CandidateTemp `protobuf:"bytes,1,opt,name=CanTmp" json:"CanTmp,omitempty"`
	TickTmp     *TicketTemp    `protobuf:"bytes,2,opt,name=TickTmp" json:"TickTmp,omitempty"`
	BlockNumber string         `protobuf:"bytes,3,opt,name=BlockNumber" json:"BlockNumber,omitempty"`
	BlockHash   string         `protobuf:"bytes,4,opt,name=BlockHash" json:"BlockHash,omitempty"`
}

func (m *PB_PPosTemp) Reset()                    { *m = PB_PPosTemp{} }
func (m *PB_PPosTemp) String() string            { return proto.CompactTextString(m) }
func (*PB_PPosTemp) ProtoMessage()               {}
func (*PB_PPosTemp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PB_PPosTemp) GetCanTmp() *CandidateTemp {
	if m != nil {
		return m.CanTmp
	}
	return nil
}

func (m *PB_PPosTemp) GetTickTmp() *TicketTemp {
	if m != nil {
		return m.TickTmp
	}
	return nil
}

func (m *PB_PPosTemp) GetBlockNumber() string {
	if m != nil {
		return m.BlockNumber
	}
	return ""
}

func (m *PB_PPosTemp) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type SortTemp struct {
	// can dependency
	Cans    []*CandidateInfo `protobuf:"bytes,1,rep,name=cans" json:"cans,omitempty"`
	ReIds   []string         `protobuf:"bytes,2,rep,name=reIds" json:"reIds,omitempty"`
	Refunds []*RefundArr     `protobuf:"bytes,3,rep,name=refunds" json:"refunds,omitempty"`
	// tick dependency
	Sq      int32               `protobuf:"varint,4,opt,name=sq" json:"sq,omitempty"`
	NodeIds []string            `protobuf:"bytes,5,rep,name=nodeIds" json:"nodeIds,omitempty"`
	Deps    []*TicketDependency `protobuf:"bytes,6,rep,name=deps" json:"deps,omitempty"`
}

func (m *SortTemp) Reset()                    { *m = SortTemp{} }
func (m *SortTemp) String() string            { return proto.CompactTextString(m) }
func (*SortTemp) ProtoMessage()               {}
func (*SortTemp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SortTemp) GetCans() []*CandidateInfo {
	if m != nil {
		return m.Cans
	}
	return nil
}

func (m *SortTemp) GetReIds() []string {
	if m != nil {
		return m.ReIds
	}
	return nil
}

func (m *SortTemp) GetRefunds() []*RefundArr {
	if m != nil {
		return m.Refunds
	}
	return nil
}

func (m *SortTemp) GetSq() int32 {
	if m != nil {
		return m.Sq
	}
	return 0
}

func (m *SortTemp) GetNodeIds() []string {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

func (m *SortTemp) GetDeps() []*TicketDependency {
	if m != nil {
		return m.Deps
	}
	return nil
}

func init() {
	proto.RegisterType((*CandidateInfo)(nil), "ppos_storage.CandidateInfo")
	proto.RegisterType((*Refund)(nil), "ppos_storage.Refund")
	proto.RegisterType((*RefundArr)(nil), "ppos_storage.RefundArr")
	proto.RegisterType((*CandidateTemp)(nil), "ppos_storage.CandidateTemp")
	proto.RegisterType((*Field)(nil), "ppos_storage.Field")
	proto.RegisterType((*TicketDependency)(nil), "ppos_storage.TicketDependency")
	proto.RegisterType((*TicketTemp)(nil), "ppos_storage.TicketTemp")
	proto.RegisterType((*PB_PPosTemp)(nil), "ppos_storage.PB_PPosTemp")
	proto.RegisterType((*SortTemp)(nil), "ppos_storage.SortTemp")
}

func init() { proto.RegisterFile("ppos_storage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x56, 0x92, 0xa6, 0x5d, 0x4f, 0x37, 0x34, 0x99, 0x09, 0xac, 0x31, 0xa1, 0x2a, 0x57, 0xdd,
	0xc5, 0x8a, 0xd6, 0x71, 0x81, 0xe0, 0x6a, 0xbf, 0xda, 0x84, 0xb4, 0x55, 0x6e, 0xaf, 0xb8, 0x60,
	0xca, 0x1a, 0x77, 0x44, 0x5b, 0xec, 0xd4, 0x4e, 0xa1, 0x7b, 0x18, 0xc4, 0x5b, 0xf0, 0x0e, 0xbc,
	0x06, 0x4f, 0x82, 0x7c, 0x9c, 0x90, 0x64, 0xac, 0xda, 0x24, 0xee, 0x7c, 0xbe, 0x7c, 0xdf, 0xf1,
	0xf1, 0x39, 0x9f, 0x1d, 0x20, 0x69, 0x2a, 0xf5, 0xa5, 0xce, 0xa4, 0x0a, 0xaf, 0x79, 0x3f, 0x55,
	0x32, 0x93, 0x64, 0xb5, 0x8a, 0x05, 0xdf, 0x5d, 0x58, 0x3b, 0x0c, 0x45, 0x14, 0x47, 0x61, 0xc6,
	0xcf, 0xc4, 0x54, 0x12, 0x0a, 0xad, 0x23, 0x9e, 0x4a, 0x1d, 0x67, 0xd4, 0xe9, 0x3a, 0xbd, 0x36,
	0x2b, 0x42, 0xd2, 0x85, 0xce, 0xc1, 0xad, 0x9c, 0xdc, 0x9c, 0xcf, 0x93, 0x2b, 0xae, 0xa8, 0x8b,
	0x5f, 0xab, 0x90, 0xd1, 0x8e, 0x17, 0x67, 0x22, 0xe2, 0x0b, 0xea, 0x75, 0x9d, 0xde, 0x1a, 0x2b,
	0x42, 0xa3, 0x2d, 0xb7, 0x89, 0x68, 0xc3, 0x6a, 0x2b, 0x10, 0x21, 0xd0, 0x38, 0x95, 0x3a, 0xa3,
	0x3e, 0x7e, 0xc2, 0xb5, 0xc1, 0x86, 0x52, 0x65, 0xb4, 0x69, 0x31, 0xb3, 0x26, 0x1b, 0xe0, 0x5f,
	0x7c, 0x13, 0x5c, 0xd1, 0x16, 0x82, 0x36, 0x30, 0xe8, 0xf1, 0x22, 0x53, 0x21, 0x5d, 0xb1, 0x28,
	0x06, 0x64, 0x1d, 0xbc, 0x13, 0xce, 0x69, 0x1b, 0x6b, 0x31, 0x4b, 0xf2, 0x02, 0x9a, 0xe3, 0xc5,
	0x69, 0xa8, 0xbf, 0x50, 0x40, 0x62, 0x1e, 0x21, 0x6e, 0xd3, 0x76, 0x72, 0x1c, 0xa3, 0xe0, 0x13,
	0x34, 0x19, 0x9f, 0xce, 0x45, 0xf4, 0x5f, 0x7d, 0xf9, 0x5b, 0xb3, 0x57, 0xa9, 0x39, 0xf8, 0x00,
	0x6d, 0x9b, 0x7b, 0x5f, 0x29, 0xd2, 0x37, 0xe9, 0xa7, 0x3c, 0xcc, 0x34, 0x75, 0xba, 0x5e, 0xaf,
	0x33, 0xd8, 0xe8, 0xd7, 0x86, 0x67, 0x99, 0xac, 0x20, 0x05, 0x3f, 0xbc, 0xca, 0xe0, 0xc6, 0x3c,
	0x49, 0xc9, 0x1b, 0x68, 0xa4, 0x8a, 0x17, 0xf2, 0x57, 0x75, 0x79, 0x6d, 0xc6, 0x0c, 0x89, 0x64,
	0x17, 0xfc, 0xc9, 0x5c, 0x29, 0x4d, 0xdd, 0xc7, 0x15, 0x96, 0x69, 0x24, 0x82, 0x2f, 0x32, 0x4d,
	0xbd, 0x27, 0x48, 0x90, 0x69, 0xca, 0x8a, 0x93, 0x44, 0xd3, 0xc6, 0x13, 0xca, 0x32, 0x44, 0xb2,
	0x03, 0x9e, 0x39, 0x86, 0xff, 0x38, 0xdf, 0xf0, 0xc8, 0x01, 0xb4, 0x14, 0xf6, 0x46, 0xd3, 0x26,
	0x4a, 0x7a, 0x4b, 0x24, 0xa6, 0x49, 0x79, 0x1b, 0xf5, 0xb1, 0xc8, 0xd4, 0x1d, 0x2b, 0x84, 0x9b,
	0x23, 0x58, 0xad, 0x7e, 0x30, 0xbe, 0xb9, 0xe1, 0x77, 0xf9, 0x9c, 0xcd, 0x92, 0xec, 0x80, 0xff,
	0x35, 0xbc, 0x9d, 0x73, 0x9c, 0x6e, 0x67, 0xf0, 0xf2, 0xa1, 0xe1, 0xec, 0x2b, 0xc5, 0x2c, 0xeb,
	0xbd, 0xfb, 0xce, 0x09, 0x46, 0xe0, 0x9f, 0xc4, 0xfc, 0x36, 0xaa, 0x78, 0xce, 0xa9, 0x79, 0x6e,
	0xcb, 0xcc, 0x3f, 0x09, 0x63, 0x11, 0x8b, 0x6b, 0xcc, 0xbb, 0xc6, 0x4a, 0xc0, 0x78, 0x66, 0xa8,
	0xe2, 0x09, 0x2f, 0x3c, 0x83, 0x41, 0x70, 0x01, 0xeb, 0xe3, 0x78, 0x72, 0xc3, 0xb3, 0x23, 0x9e,
	0x72, 0x11, 0x71, 0x31, 0xc1, 0x6a, 0xcf, 0xe7, 0x49, 0x9e, 0xc1, 0x2c, 0xc9, 0x36, 0xf8, 0xe3,
	0x58, 0x4c, 0x65, 0x3e, 0xa6, 0xe7, 0xf5, 0x6a, 0xb1, 0x2a, 0x66, 0x19, 0xc1, 0x2f, 0x07, 0xc0,
	0x66, 0x44, 0x13, 0x3d, 0x03, 0x77, 0x34, 0xc3, 0x3a, 0x7d, 0xe6, 0x8e, 0x66, 0xe4, 0x23, 0x74,
	0xca, 0x9d, 0x8a, 0x21, 0x6e, 0xd7, 0xf3, 0x95, 0xf2, 0x7e, 0x85, 0x6b, 0x5b, 0x5c, 0x55, 0x6f,
	0x7e, 0x86, 0xf5, 0xfb, 0x84, 0x07, 0x5a, 0xfd, 0xb6, 0xde, 0xea, 0xd7, 0x0f, 0x6d, 0x56, 0xa6,
	0xa9, 0x76, 0xfc, 0xa7, 0x03, 0x9d, 0xe1, 0xc1, 0xe5, 0x70, 0x28, 0x35, 0x1e, 0x66, 0x0f, 0x9a,
	0x87, 0xa1, 0x18, 0x27, 0x29, 0xa6, 0x5f, 0x6e, 0x26, 0x43, 0x66, 0x39, 0x95, 0x0c, 0xa0, 0x65,
	0xf6, 0x30, 0x2a, 0x5b, 0x00, 0x5d, 0x76, 0x5a, 0x56, 0x10, 0xef, 0xbf, 0x00, 0xde, 0xbf, 0x2f,
	0xc0, 0x16, 0xb4, 0x31, 0x44, 0x1b, 0xd8, 0xd7, 0xaf, 0x04, 0x82, 0xdf, 0x0e, 0xac, 0x8c, 0xa4,
	0xca, 0x8a, 0x7b, 0x3c, 0x09, 0xc5, 0xd3, 0xee, 0xb1, 0x21, 0x1a, 0xa7, 0x28, 0x7e, 0x16, 0xd9,
	0x7b, 0xdc, 0x66, 0x36, 0x20, 0xbb, 0xe5, 0xbd, 0xb0, 0x2e, 0x58, 0xea, 0xd9, 0x82, 0x67, 0x86,
	0xaf, 0x67, 0x58, 0x9d, 0xcf, 0x5c, 0x3d, 0x33, 0x4f, 0x9e, 0x90, 0x11, 0xa6, 0xf6, 0x31, 0x75,
	0x11, 0x92, 0x01, 0x34, 0x22, 0x9e, 0x16, 0x37, 0xee, 0xb1, 0x11, 0x21, 0xf7, 0xaa, 0x89, 0xff,
	0x9f, 0xbd, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x69, 0xff, 0xba, 0x95, 0x06, 0x00, 0x00,
}
