syntax = "proto3";
package ppos_storage;


message CandidateInfo {

    string Deposit = 1;
    string BlockNumber = 2;
    uint32 TxIndex = 3;
    string CandidateId = 4;
    string Host = 5;
    string Port = 6;
    string Owner = 7;
    //  string    From          = 8;
    string Extra = 8;
    uint32 Fee = 9;
    string TxHash = 10;
    string TOwner = 11;
}

message Refund {
    string Deposit = 1;
    string BlockNumber = 2;
    string Owner = 3;
}

message RefundArr {
    repeated Refund Defeats = 1;
}

message CandidateTemp {
    //  three round witness
    repeated CandidateInfo pres = 1;
    repeated CandidateInfo currs = 2;
    repeated CandidateInfo nexts = 3;

    // can pool
    repeated CandidateInfo imms = 4;
    repeated CandidateInfo res = 5;

    // refunds
    map<string, RefundArr> refunds = 6;
}

//message TicketInfo {
//    bytes   Owner 	    = 1;
//	string  Deposit	    =2;
//	bytes   CandidateId  = 3;
//	string  BlockNumber = 4;
//	uint32  Remaining	= 5;
//}

//message TxHashArr {
//    repeated string  TxHashs = 1;
//}


message Field {
    string TxHash = 1;
    uint32 Remaining = 2;
    string Price = 3;
}

message TicketDependency {
    //    uint64  Age = 1;
    uint32 Num = 2;
    //    repeated bytes  Tids = 3;
    repeated Field Tinfo = 3;
}

message TicketTemp {
    int32 Sq = 1;
    //    map<string, TicketInfo> Infos = 2;
    //    map<string, TxHashArr> Ets  = 3;
    map<string, TicketDependency> Dependencys = 4;
}


message PB_PPosTemp {
    CandidateTemp CanTmp = 1;
    TicketTemp TickTmp = 2;
    string BlockNumber = 3;
    string BlockHash = 4;
}

// sort information

message SortTemp {

    // can dependency
    repeated CandidateInfo cans = 1;
    repeated string reIds = 2;
    repeated RefundArr refunds = 3;

    // tick dependency
    int32 sq = 4;
    repeated string nodeIds = 5;
    repeated TicketDependency deps = 6;


}



